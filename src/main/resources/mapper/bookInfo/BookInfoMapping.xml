<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.executer.bookInfo.dao.BookInfoDao">

    <resultMap id="BaseResultMap" type="com.example.demo.executer.bookInfo.model.BookInfoModel">
        <result column="id" property="id"/>
        <result column="book_name" property="bookName"/>
        <result column="book_price" property="bookPrice"/>
        <result column="book_auther" property="bookAuther"/>
        <result column="book_type" property="bookType"/>
        <result column="rare_flag" property="rareFlag"/>
        <result column="borrow_times" property="borrowTimes"/>
        <result column="borrow_flag" property="borrowFlag"/>
        <result column="lose_flag" property="loseFlag"/>
        <result column="press" property="press"/>
        <result column="press_date" property="pressDate"/>
        <result column="remark" property="remark"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_time" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
            id,
            book_name,
            book_price,
            book_auther,
            book_type,
            rare_flag,
            borrow_times,
            borrow_flag,
            lose_flag,
            press,
            press_date,
            remark,
            create_time,
            update_time
    </sql>

    <insert id="insertOne" parameterType="com.example.demo.executer.bookInfo.model.BookInfoModel">
        <trim>
            insert into t_book_info(
            id,
            book_name,
            book_price,
            book_auther,
            book_type,
            rare_flag,
            press,
            press_date,
            remark
            )
            values(
            #{id},
            #{bookName},
            #{bookPrice},
            #{bookAuther},
            #{bookType},
            #{rareFlag},
            #{press},
            #{pressDate},
            #{remark}
            );
        </trim>
    </insert>

    <update id="updateOne" parameterType="com.example.demo.executer.bookInfo.model.BookInfoModel">
        update t_book_info set
        <trim suffixOverrides=",">
            <if test="bookName != null">
                book_name = #{bookInfo},
            </if>
            <if test="bookPrice != null">
                book_price = #{bookPrice},
            </if>
            <if test="bookAuther != null">
                book_auther = #{bookAuther},
            </if>
            <if test="bookType != null">
                book_type = #{bookType},
            </if>
            <if test="rareFlag != null">
                rare_flag = #{rareFlag},
            </if>
            <if test="borrowTimes != null">
                borrow_times = #{borrowTimes},
            </if>
            <if test="borrowFlag != null">
                borrow_flag = #{borrowFlag},
            </if>
            <if test="loseFlag != null">
                lose_flag = #{loseFlag},
            </if>
            <if test="press != null">
                press = #{press},
            </if>
            <if test="pressDate != null">
                press_date = #{pressDate},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
        </trim>
        <where>
            id = #{id}
        </where>
    </update>

    <select id="selectOne" parameterType="java.lang.String" resultMap="BaseResultMap">
        <trim>
            select
            <include refid="Base_Column_List"/>
            from t_book_info
            <where>
                id = #{id}
            </where>
        </trim>
    </select>

    <select id="selectBookList" resultMap="BaseResultMap">
        <trim>
            select
            <include refid="Base_Column_List"/>
            from t_book_info
            <where>
                <if test="bookType != null">
                    and book_type = #{bookType}
                </if>
                <if test="rareFlag != null">
                    and rare_flag = #{rareFlag}
                </if>
                <if test="borrowFlag != null">
                    and borrow_flag = #{borrowFlag}
                </if>
                <if test="loseFlag != null">
                    and lose_flag = #{loseFlag}
                </if>
            </where>
            order by create_time desc
            <if test="pageNo != 0">
                limit #{startNum},#{pageSize}
            </if>
        </trim>
    </select>


</mapper>